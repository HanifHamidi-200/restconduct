<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>